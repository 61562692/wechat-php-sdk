<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[wechat-php-sdk Blog]]></title>
  <subtitle><![CDATA[微信平台wechat-php-sdk开源项目，开发文档blog]]></subtitle>
  <link href="/wechat-php-sdk/atom.xml" rel="self"/>
  <link href="https://binsee.github.io/wechat-php-sdk/"/>
  <updated>2015-01-08T17:50:18.761Z</updated>
  <id>https://binsee.github.io/wechat-php-sdk/</id>
  
  <author>
    <name><![CDATA[binsee]]></name>
    <email><![CDATA[binsee@163.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[泄露出来的微信JSSDK说明文档]]></title>
    <link href="https://binsee.github.io/wechat-php-sdk/2015/%E6%B3%84%E9%9C%B2%E5%87%BA%E6%9D%A5%E7%9A%84%E5%BE%AE%E4%BF%A1JSSDK%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3/"/>
    <id>https://binsee.github.io/wechat-php-sdk/2015/泄露出来的微信JSSDK说明文档/</id>
    <published>2015-01-08T16:51:58.000Z</published>
    <updated>2015-01-08T16:51:58.000Z</updated>
    <content type="html"><![CDATA[<h1 id="基本说明">基本说明</h1>
<h2 id="使用说明">使用说明</h2>
<h3 id="1-引入JS文件">1.引入JS文件</h3>
<p>在需要调用JS接口的页面引入如下JS文件，（支持https）：<a href="http://res.wx.qq.com/open/js/jweixin-1.0.0.js" target="_blank" rel="external">http://res.wx.qq.com/open/js/jweixin-1.0.0.js</a></p>
<p>备注：支持使用 AMD/CMD 标准模块加载方法加载</p>
<h3 id="2-注入配置config接口">2.注入配置config接口</h3>
<p>所有需要使用JSSDK的页面必须先注入配置信息，否则将无法调用（同一个url仅需调用一次，对于变化url的SPA的web app可在每次url变化时进行调用）。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">wx.config({</div><div class="line">	debug: <span class="literal">true</span>, <span class="comment">// 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span></div><div class="line">	appId: <span class="string">''</span>, <span class="comment">// 必填，公众号的唯一标识</span></div><div class="line">	timestamp: , <span class="comment">// 必填，生成签名的时间戳</span></div><div class="line">	nonceStr: <span class="string">''</span>, <span class="comment">// 必填，生成签名的随机串</span></div><div class="line">	signature: <span class="string">''</span>,<span class="comment">// 必填，签名，见附录1</span></div><div class="line">	jsApiList: [] <span class="comment">// 必填，需要使用的JS接口列表，所有JS接口列表见附录2</span></div><div class="line">});</div></pre></td></tr></table></figure>

<h3 id="3-验证通过ready接口">3.验证通过ready接口</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wx.ready(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>{</div><div class="line">    <span class="comment">// config信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，则须把相关接口放在ready函数中调用来确保正确执行。对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。</span></div><div class="line">});</div></pre></td></tr></table></figure>

<h3 id="4-验证失败error接口">4.验证失败error接口</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wx.<span class="built_in">error</span>(<span class="function"><span class="keyword">function</span><span class="params">(res)</span></span>{</div><div class="line">// config信息验证失败会执行<span class="built_in">error</span>函数，如签名过期导致验证失败，具体错误信息可以打开config的<span class="built_in">debug</span>模式查看，也可以在返回的res参数中查看，对于SPA可以在这里更新签名。</div><div class="line">});</div></pre></td></tr></table></figure>

<h2 id="接口调用说明">接口调用说明</h2>
<p>所有接口通过wx对象(也可使用jWeixin对象)来调用，参数是一个对象，除了每个接口本身需要传的参数之外，还有以下通用参数：</p>
<p>success：接口调用成功时执行的回调函数。<br>fail：接口调用失败时执行的回调函数。<br>complete：接口调用完成时执行的回调函数，无论成功或失败都会执行。<br>cancel：用户点击取消时的回调函数，仅部分有用户取消操作的api才会用到。<br>trigger: 监听Menu中的按钮点击时触发的方法，该方法仅支持Menu中的相关接口。</p>
<p>以上几个函数都带有一个参数，类型为对象，其中除了每个接口本身返回的数据之外，还有一个通用属性errMsg，其值格式如下：</p>
<p>调用成功时：”xxx:ok” ，其中xxx为调用的接口名<br>用户取消时：”xxx:cancel”，其中xxx为调用的接口名<br>调用失败时：其值为具体错误信息<br>基础接口</p>
<h3 id="判断当前客户端版本是否支持指定JS接口">判断当前客户端版本是否支持指定JS接口</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">wx.checkJsApi({</div><div class="line">jsApiList: [<span class="string">'chooseImage'</span>], // 需要检测的JS接口列表，所有JS接口列表见附录<span class="number">2</span>,</div><div class="line">success: <span class="function"><span class="keyword">function</span><span class="params">(res)</span></span> {</div><div class="line">// 以键值对的形式返回，可用的api值<span class="keyword">true</span>，不可用为<span class="keyword">false</span></div><div class="line">// 如：{<span class="string">"checkResult"</span>:{<span class="string">"chooseImage"</span>:<span class="keyword">true</span>},<span class="string">"errMsg"</span>:<span class="string">"checkJsApi:ok"</span>}</div><div class="line">}</div><div class="line">});</div></pre></td></tr></table></figure>

<h2 id="分享接口">分享接口</h2>
<h3 id="获取“分享到朋友圈”按钮点击状态及自定义分享内容接口">获取“分享到朋友圈”按钮点击状态及自定义分享内容接口</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">wx.onMenuShareTimeline({</div><div class="line">    title: <span class="string">''</span>, <span class="comment">// 分享标题</span></div><div class="line">    link: <span class="string">''</span>, <span class="comment">// 分享链接</span></div><div class="line">imgUrl: <span class="string">''</span>, <span class="comment">// 分享图标</span></div><div class="line">success: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>{ </div><div class="line"><span class="comment">// 用户确认分享后执行的回调函数</span></div><div class="line">},</div><div class="line">cancel: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>{ </div><div class="line"><span class="comment">// 用户取消分享后执行的回调函数</span></div><div class="line">}</div><div class="line">});</div></pre></td></tr></table></figure>

<h3 id="获取“分享给朋友”按钮点击状态及自定义分享内容接口">获取“分享给朋友”按钮点击状态及自定义分享内容接口</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">wx.onMenuShareAppMessage({</div><div class="line">    title: <span class="string">''</span>, <span class="comment">// 分享标题</span></div><div class="line">    desc: <span class="string">''</span>, <span class="comment">// 分享描述</span></div><div class="line">    link: <span class="string">''</span>, <span class="comment">// 分享链接</span></div><div class="line">    imgUrl: <span class="string">''</span>, <span class="comment">// 分享图标</span></div><div class="line">    type: <span class="string">''</span>, <span class="comment">// 分享类型,music、video或link，不填默认为link</span></div><div class="line">dataUrl: <span class="string">''</span>, <span class="comment">// 如果type是music或video，则要提供数据链接，默认为空</span></div><div class="line">success: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>{ </div><div class="line"><span class="comment">// 用户确认分享后执行的回调函数</span></div><div class="line">},</div><div class="line">cancel: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>{ </div><div class="line"><span class="comment">// 用户取消分享后执行的回调函数</span></div><div class="line">}</div><div class="line">});</div></pre></td></tr></table></figure>

<h3 id="获取“分享到QQ”按钮点击状态及自定义分享内容接口">获取“分享到QQ”按钮点击状态及自定义分享内容接口</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">wx.onMenuShareQQ({</div><div class="line">    title: <span class="string">''</span>, <span class="comment">// 分享标题</span></div><div class="line">    desc: <span class="string">''</span>, <span class="comment">// 分享描述</span></div><div class="line">    link: <span class="string">''</span>, <span class="comment">// 分享链接</span></div><div class="line">    imgUrl: <span class="string">''</span> <span class="comment">// 分享图标</span></div><div class="line">success: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>{ </div><div class="line"><span class="comment">// 用户确认分享后执行的回调函数</span></div><div class="line">},</div><div class="line">cancel: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>{ </div><div class="line"><span class="comment">// 用户取消分享后执行的回调函数</span></div><div class="line">}</div><div class="line">});</div></pre></td></tr></table></figure>

<h3 id="获取“分享到腾讯微博”按钮点击状态及自定义分享内容接口">获取“分享到腾讯微博”按钮点击状态及自定义分享内容接口</h3>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">wx.onMenuShareWeibo({</div><div class="line">    title: <span class="string">''</span>, <span class="comment">// 分享标题</span></div><div class="line">    desc: <span class="string">''</span>, <span class="comment">// 分享描述</span></div><div class="line">    link: <span class="string">''</span>, <span class="comment">// 分享链接</span></div><div class="line">    imgUrl: <span class="string">''</span> <span class="comment">// 分享图标</span></div><div class="line">success: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>{ </div><div class="line"><span class="comment">// 用户确认分享后执行的回调函数</span></div><div class="line">},</div><div class="line">cancel: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>{ </div><div class="line"><span class="comment">// 用户取消分享后执行的回调函数</span></div><div class="line">}</div><div class="line">});</div></pre></td></tr></table></figure>

<h1 id="图像接口">图像接口</h1>
<h2 id="拍照或从手机相册中选图接口">拍照或从手机相册中选图接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">wx.chooseImage({</div><div class="line">    success: <span class="function"><span class="keyword">function</span> <span class="params">(res)</span> </span>{</div><div class="line">        <span class="keyword">var</span> localIds = res.localIds; <span class="comment">// 返回选定照片的本地ID列表，localId可以作为img标签的src属性显示图片</span></div><div class="line">    }</div><div class="line">});</div></pre></td></tr></table></figure>

<h2 id="预览图片接口">预览图片接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">wx</span><span class="class">.previewImage</span>(<span class="rules">{</span></div><div class="line">    <span class="rule"><span class="attribute">current</span>:<span class="value"> <span class="string">''</span>, // 当前显示的图片链接</span></span></div><div class="line">    urls: [] // 需要预览的图片链接列表</div><div class="line">});</div></pre></td></tr></table></figure>

<h2 id="上传图片接口">上传图片接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">wx.uploadImage({</div><div class="line">localId: <span class="string">''</span>, <span class="comment">// 需要上传的图片的本地ID，由chooseImage接口获得</span></div><div class="line">isShowProgressTips: <span class="number">1</span><span class="comment">// 默认为1，显示进度提示</span></div><div class="line">    success: <span class="function"><span class="keyword">function</span> <span class="params">(res)</span> </span>{</div><div class="line">        <span class="keyword">var</span> serverId = res.serverId; <span class="comment">// 返回图片的服务器端ID</span></div><div class="line">    }</div><div class="line">});</div></pre></td></tr></table></figure>

<p>备注：可用微信下载多媒体文件接口下载上传的图片，此处获得的 serverId 即 media_id，参考文档 ../12/58bfcfabbd501c7cd77c19bd9cfa8354.html</p>
<h2 id="下载图片接口">下载图片接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">wx.downloadImage({</div><div class="line">serverId: <span class="string">''</span>, <span class="comment">// 需要下载的图片的服务器端ID，由uploadImage接口获得</span></div><div class="line">isShowProgressTips: <span class="number">1</span><span class="comment">// 默认为1，显示进度提示</span></div><div class="line">    success: <span class="function"><span class="keyword">function</span> <span class="params">(res)</span> </span>{</div><div class="line">        <span class="keyword">var</span> localId = res.localId; <span class="comment">// 返回图片下载后的本地ID</span></div><div class="line">    }</div><div class="line">});</div></pre></td></tr></table></figure>

<h1 id="音频接口">音频接口</h1>
<h2 id="开始录音接口">开始录音接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wx.startRecord();</div></pre></td></tr></table></figure>

<h2 id="停止录音接口">停止录音接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">wx.stopRecord({</div><div class="line">    success: <span class="function"><span class="keyword">function</span> <span class="params">(res)</span> </span>{</div><div class="line">        <span class="keyword">var</span> localId = res.localId;</div><div class="line">    }</div><div class="line">});</div></pre></td></tr></table></figure>

<h2 id="监听录音自动停止接口">监听录音自动停止接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">wx.onVoiceRecordEnd({</div><div class="line"> 	<span class="comment">// 录音时间超过一分钟没有停止的时候会执行 complete 回调</span></div><div class="line">complete: <span class="function"><span class="keyword">function</span> <span class="params">(res)</span> </span>{</div><div class="line"><span class="keyword">var</span> localId = res.localId; </div><div class="line">}</div><div class="line">});</div></pre></td></tr></table></figure>

<h2 id="播放语音接口">播放语音接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">wx</span><span class="class">.playVoice</span>(<span class="rules">{</span></div><div class="line">    <span class="rule"><span class="attribute">localId</span>:<span class="value"> <span class="string">''</span> // 需要播放的音频的本地ID，由stopRecord接口获得</span></span></div><div class="line">});</div></pre></td></tr></table></figure>

<h2 id="暂停播放接口">暂停播放接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">wx</span><span class="class">.pauseVoice</span>(<span class="rules">{</span></div><div class="line">    <span class="rule"><span class="attribute">localId</span>:<span class="value"> <span class="string">''</span> // 需要暂停的音频的本地ID，由stopRecord接口获得</span></span></div><div class="line">});</div></pre></td></tr></table></figure>

<h2 id="停止播放接口">停止播放接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">wx</span><span class="class">.stopVoice</span>(<span class="rules">{</span></div><div class="line">    <span class="rule"><span class="attribute">localId</span>:<span class="value"> <span class="string">''</span> // 需要停止的音频的本地ID，由stopRecord接口获得</span></span></div><div class="line">});</div></pre></td></tr></table></figure>

<h2 id="监听语音播放完毕接口">监听语音播放完毕接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">wx.onVoicePlayEnd({</div><div class="line">    serverId: <span class="string">''</span>, <span class="comment">// 需要下载的音频的服务器端ID，由uploadVoice接口获得</span></div><div class="line">    success: <span class="function"><span class="keyword">function</span> <span class="params">(res)</span> </span>{</div><div class="line">        <span class="keyword">var</span> localId = res.localId; <span class="comment">// 返回音频的本地ID</span></div><div class="line">    }</div><div class="line">});</div></pre></td></tr></table></figure>

<h2 id="上传语音接口">上传语音接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">wx.uploadVoice({</div><div class="line">localId: <span class="string">''</span>, <span class="comment">// 需要上传的音频的本地ID，由stopRecord接口获得</span></div><div class="line">isShowProgressTips: <span class="number">1</span><span class="comment">// 默认为1，显示进度提示</span></div><div class="line">    success: <span class="function"><span class="keyword">function</span> <span class="params">(res)</span> </span>{</div><div class="line">        <span class="keyword">var</span> serverId = res.serverId; <span class="comment">// 返回音频的服务器端ID</span></div><div class="line">    }</div><div class="line">});</div></pre></td></tr></table></figure>

<p>备注：可用微信下载多媒体文件接口下载上传的语音，此处获得的 serverId 即 media_id，参考文档 ../12/58bfcfabbd501c7cd77c19bd9cfa8354.html</p>
<h2 id="下载语音接口">下载语音接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">wx.downloadVoice({</div><div class="line">serverId: <span class="string">''</span>, <span class="comment">// 需要下载的音频的服务器端ID，由uploadVoice接口获得</span></div><div class="line">isShowProgressTips: <span class="number">1</span><span class="comment">// 默认为1，显示进度提示</span></div><div class="line">    success: <span class="function"><span class="keyword">function</span> <span class="params">(res)</span> </span>{</div><div class="line">        <span class="keyword">var</span> localId = res.localId; <span class="comment">// 返回音频的本地ID</span></div><div class="line">    }</div><div class="line">});</div></pre></td></tr></table></figure>

<h1 id="智能接口">智能接口</h1>
<h2 id="识别音频并返回识别结果接口">识别音频并返回识别结果接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">wx.translateVoice({</div><div class="line">localId: <span class="string">''</span>, <span class="comment">// 需要识别的音频的本地Id，由录音相关接口获得</span></div><div class="line">isShowProgressTips: <span class="number">1</span>, <span class="comment">// 默认为1，显示进度提示</span></div><div class="line">success: <span class="function"><span class="keyword">function</span> <span class="params">(res)</span> </span>{</div><div class="line">alert(res.translateResult); <span class="comment">// 语音识别的结果</span></div><div class="line">}</div><div class="line">});</div></pre></td></tr></table></figure>

<h1 id="设备信息">设备信息</h1>
<h2 id="获取网络状态接口">获取网络状态接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">wx.getNetworkType({</div><div class="line">    success: <span class="function"><span class="keyword">function</span> <span class="params">(res)</span> </span>{</div><div class="line">        <span class="keyword">var</span> networkType = res.networkType; <span class="comment">// 返回网络类型2g，3g，4g，wifi</span></div><div class="line">    }</div><div class="line">});</div></pre></td></tr></table></figure>

<h1 id="地理位置">地理位置</h1>
<h2 id="使用微信内置地图查看位置接口">使用微信内置地图查看位置接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">wx.openLocation({</div><div class="line">    latitude: <span class="number">0</span>, <span class="comment">// 纬度，浮点数，范围为90 ~ -90</span></div><div class="line">    longitude: <span class="number">0</span>, <span class="comment">// 经度，浮点数，范围为180 ~ -180。</span></div><div class="line">    name: <span class="string">''</span>, <span class="comment">// 位置名</span></div><div class="line">    address: <span class="string">''</span>, <span class="comment">// 地址详情说明</span></div><div class="line">    <span class="keyword">scale</span>: <span class="number">1</span>, <span class="comment">// 地图缩放级别,整形值,范围从1~28。默认为最大</span></div><div class="line">infoUrl: <span class="string">''</span> <span class="comment">// 在查看位置界面底部显示的超链接,可点击跳转</span></div><div class="line">});</div></pre></td></tr></table></figure>

<h2 id="获取地理位置接口">获取地理位置接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">wx.getLocation({</div><div class="line">    timestamp: <span class="number">0</span>, <span class="comment">// 位置签名时间戳，仅当需要兼容6.0.2版本之前时提供</span></div><div class="line">    nonceStr: <span class="string">''</span>, <span class="comment">// 位置签名随机串，仅当需要兼容6.0.2版本之前时提供</span></div><div class="line">    addrSign: <span class="string">''</span>, <span class="comment">// 位置签名，仅当需要兼容6.0.2版本之前时提供，详见附录4</span></div><div class="line">    success: <span class="function"><span class="keyword">function</span> <span class="params">(res)</span> </span>{</div><div class="line">        <span class="keyword">var</span> longitude = res.longitude; <span class="comment">// 纬度，浮点数，范围为90 ~ -90</span></div><div class="line">        <span class="keyword">var</span> latitude = res.latitude; <span class="comment">// 经度，浮点数，范围为180 ~ -180。</span></div><div class="line">        <span class="keyword">var</span> speed = res.speed; <span class="comment">// 速度，以米/每秒计</span></div><div class="line">        <span class="keyword">var</span> accuracy = res.accuracy; <span class="comment">// 位置精度</span></div><div class="line">    }</div><div class="line">});</div></pre></td></tr></table></figure>

<h1 id="界面操作">界面操作</h1>
<h2 id="隐藏右上角菜单接口">隐藏右上角菜单接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wx.hideOptionMenu();</div></pre></td></tr></table></figure>

<h2 id="显示右上角菜单接口">显示右上角菜单接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wx.showOptionMenu();</div></pre></td></tr></table></figure>

<h2 id="关闭当前网页窗口接口">关闭当前网页窗口接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wx.closeWindow();</div></pre></td></tr></table></figure>

<h2 id="批量隐藏功能按钮接口">批量隐藏功能按钮接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">wx</span><span class="class">.hideMenuItems</span>(<span class="rules">{</span></div><div class="line">    <span class="rule"><span class="attribute">menuList</span>:<span class="value"> [] // 要隐藏的菜单项，所有menu项见附录<span class="number">3</span></span></span></div><div class="line">});</div></pre></td></tr></table></figure>

<h2 id="批量显示功能按钮接口">批量显示功能按钮接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">wx</span><span class="class">.showMenuItems</span>(<span class="rules">{</span></div><div class="line">    <span class="rule"><span class="attribute">menuList</span>:<span class="value"> [] // 要显示的菜单项，所有menu项见附录<span class="number">3</span></span></span></div><div class="line">});</div></pre></td></tr></table></figure>

<h2 id="隐藏所有非基础按钮接口">隐藏所有非基础按钮接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wx.hideAllNonBaseMenuItem();</div></pre></td></tr></table></figure>

<h2 id="显示所有功能按钮接口">显示所有功能按钮接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wx.showAllNonBaseMenuItem();</div></pre></td></tr></table></figure>

<h1 id="微信扫一扫">微信扫一扫</h1>
<h2 id="调起微信扫一扫接口">调起微信扫一扫接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">wx.scanQRCode({</div><div class="line">desc: 'scanQRCode desc',</div><div class="line">needResult: <span class="number">0</span>, // 默认为<span class="number">0</span>，扫描结果由微信处理，<span class="number">1</span>则直接返回扫描结果，</div><div class="line">scanType: [<span class="string">"qrCode"</span>,<span class="string">"barCode"</span>], // 可以指定扫二维码还是一维码，默认二者都有</div><div class="line">success: function () {</div><div class="line"><span class="keyword">var</span> <span class="literal">result</span> = res.resultStr; // 当needResult 为 <span class="number">1</span> 时，扫码返回的结果</div><div class="line">}</div><div class="line">});</div></pre></td></tr></table></figure>

<h1 id="收获地址">收获地址</h1>
<h2 id="编辑收货地址接口">编辑收货地址接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">wx.editAddress(</div><div class="line">    timestamp: <span class="number">0</span>, <span class="comment">// 位置签名时间戳，仅当需要兼容6.0.2版本之前时提供</span></div><div class="line">    nonceStr: <span class="string">''</span>, <span class="comment">// 位置签名随机串，仅当需要兼容6.0.2版本之前时提供</span></div><div class="line">    addrSign: <span class="string">''</span>, <span class="comment">// 位置签名，仅当需要兼容6.0.2版本之前时提供，详见附录4</span></div><div class="line">    success: <span class="function"><span class="keyword">function</span> <span class="params">(res)</span> </span>{</div><div class="line">        <span class="keyword">var</span> userName = res.userName; <span class="comment">// 收货人姓名</span></div><div class="line">        <span class="keyword">var</span> telNumber = res.telNumber; <span class="comment">// 收货人电话</span></div><div class="line">        <span class="keyword">var</span> postalCode = res.postalCode; <span class="comment">// 邮编</span></div><div class="line">        <span class="keyword">var</span> provinceName = res.provinceName; <span class="comment">// 国标收货地址第一级地址</span></div><div class="line">        <span class="keyword">var</span> cityName = res.cityName; <span class="comment">// 国标收货地址第二级地址</span></div><div class="line">        <span class="keyword">var</span> countryName = res.countryName; <span class="comment">// 国标收货地址第三级地址</span></div><div class="line">        <span class="keyword">var</span> address = res.address; <span class="comment">// 详细收货地址信息</span></div><div class="line">        <span class="keyword">var</span> nationalCode = res.nationalCode; <span class="comment">// 收货地址国家码</span></div><div class="line">    }</div><div class="line">});</div></pre></td></tr></table></figure>

<h2 id="获取最近的收货地址接口">获取最近的收货地址接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">wx.getLatestAddress({</div><div class="line">    timestamp: <span class="number">0</span>, <span class="comment">// 位置签名时间戳，仅当需要兼容6.0.2版本之前时提供</span></div><div class="line">    nonceStr: <span class="string">''</span>, <span class="comment">// 位置签名随机串，仅当需要兼容6.0.2版本之前时提供</span></div><div class="line">    addrSign: <span class="string">''</span>, <span class="comment">// 位置签名，仅当需要兼容6.0.2版本之前时提供，详见附录4</span></div><div class="line">    success: <span class="function"><span class="keyword">function</span> <span class="params">(res)</span> </span>{</div><div class="line">        <span class="keyword">var</span> userName = res.userName; <span class="comment">// 收货人姓名</span></div><div class="line">        <span class="keyword">var</span> telNumber = res.telNumber; <span class="comment">// 收货人电话</span></div><div class="line">        <span class="keyword">var</span> postalCode = res.postalCode; <span class="comment">// 邮编</span></div><div class="line">        <span class="keyword">var</span> provinceName = res.provinceName; <span class="comment">// 国标收货地址第一级地址</span></div><div class="line">        <span class="keyword">var</span> cityName = res.cityName; <span class="comment">// 国标收货地址第二级地址</span></div><div class="line">        <span class="keyword">var</span> countryName = res.countryName; <span class="comment">// 国标收货地址第三级地址</span></div><div class="line">        <span class="keyword">var</span> address = res.address; <span class="comment">// 详细收货地址信息</span></div><div class="line">        <span class="keyword">var</span> nationalCode = res.nationalCode; <span class="comment">// 收货地址国家码</span></div><div class="line">    }</div><div class="line">});</div></pre></td></tr></table></figure>

<h1 id="微信小店">微信小店</h1>
<h2 id="跳转微信商品页接口">跳转微信商品页接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">wx</span><span class="class">.openProductSpecificView</span>(<span class="rules">{</span></div><div class="line"><span class="rule"><span class="attribute">productId</span>:<span class="value"> <span class="string">''</span>, // 商品id</span></span></div><div class="line">viewType: <span class="string">''</span> // <span class="number">0</span>.默认值，普通商品详情页<span class="number">1</span>.扫一扫商品详情页<span class="number">2</span>.小店商品详情页</div><div class="line">});</div></pre></td></tr></table></figure>

<h1 id="微信卡券">微信卡券</h1>
<h2 id="调起适用于门店的卡券列表并获取用户选择列表">调起适用于门店的卡券列表并获取用户选择列表</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">wx.chooseCard({</div><div class="line">    shopId: <span class="string">''</span>, <span class="comment">// 门店Id</span></div><div class="line">    cardType: <span class="string">''</span>, <span class="comment">// 卡券类型</span></div><div class="line">    cardId: <span class="string">''</span>, <span class="comment">// 卡券Id</span></div><div class="line">    timeStamp: <span class="number">0</span>, <span class="comment">// 卡券签名时间戳</span></div><div class="line">    nonceStr: <span class="string">''</span>, <span class="comment">// 卡券签名随机串</span></div><div class="line">    cardSign: <span class="string">''</span>, <span class="comment">// 卡券签名，详见附录6</span></div><div class="line">    success: <span class="function"><span class="keyword">function</span> <span class="params">(res)</span> </span>{</div><div class="line">        <span class="keyword">var</span> cardList= res.cardList; <span class="comment">// 用户选中的卡券列表信息</span></div><div class="line">    }</div><div class="line">});</div></pre></td></tr></table></figure>

<h2 id="批量添加卡券接口">批量添加卡券接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">wx.addCard({</div><div class="line">cardList: [{</div><div class="line">cardId: <span class="string">''</span>,</div><div class="line">cardExt: <span class="string">''</span></div><div class="line">}], <span class="comment">// 需要添加的卡券列表</span></div><div class="line">    success: <span class="function"><span class="keyword">function</span> <span class="params">(res)</span> </span>{</div><div class="line">        <span class="keyword">var</span> cardList = res.cardList; <span class="comment">// 添加的卡券列表信息</span></div><div class="line">    }</div><div class="line">});</div></pre></td></tr></table></figure>

<h2 id="查看微信卡包中的卡券接口">查看微信卡包中的卡券接口</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">wx.openCard({</div><div class="line">cardList: [{</div><div class="line">cardId: <span class="string">''</span>,</div><div class="line">code: <span class="string">''</span></div><div class="line">}]<span class="comment">// 需要打开的卡券列表</span></div><div class="line">});</div></pre></td></tr></table></figure>

<h1 id="微信支付">微信支付</h1>
<h2 id="发起一个微信支付请求">发起一个微信支付请求</h2>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">wx.chooseWXPay({</div><div class="line">timestamp: <span class="number">0</span>, <span class="comment">// 支付签名时间戳</span></div><div class="line">noncestr: <span class="string">''</span>, <span class="comment">// 支付签名随机串</span></div><div class="line"><span class="keyword">package</span>: <span class="string">''</span>, <span class="comment">// 订单详情扩展字符串，详见附录5</span></div><div class="line">paySign: <span class="string">''</span>, <span class="comment">// 支付签名，详见附录5</span></div><div class="line">});</div></pre></td></tr></table></figure>

<h1 id="附录1-JSSDK使用权限签名算法">附录1-JSSDK使用权限签名算法</h1>
<h2 id="jsapi_ticket">jsapi_ticket</h2>
<p>生成签名之前必须先了解一下jsapi_ticket，jsapi_ticket是公众号用于调用微信JS接口的临时票据。正常情况下，jsapi_ticket的有效期为7200秒，通过access_token来获取。由于获取jsapi_ticket的api调用次数非常有限，频繁刷新jsapi_ticket会导致api调用受限，影响自身业务，开发者必须在自己的服务全局缓存jsapi_ticket 。</p>
<p>参考以下文档获取access_token（有效期7200秒，开发者必须在自己的服务全局缓存access_token）：<a href="http://mp.weixin.qq.com/wiki/11/0e4b294685f817b95cbed85ba5e82b8f.html" target="_blank" rel="external">获取access token</a><br>用第一步拿到的access_token 采用http GET方式请求获得jsapi_ticket（有效期7200秒，开发者必须在自己的服务全局缓存jsapi_ticket）：<a href="https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token=ACCESS_TOKEN&amp;type=jsapi" target="_blank" rel="external">https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token=ACCESS_TOKEN&amp;type=jsapi</a><br>成功返回如下JSON：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">{</div><div class="line">"<span class="attribute">errcode</span>":<span class="value"><span class="number">0</span></span>,</div><div class="line">"<span class="attribute">errmsg</span>":<span class="value"><span class="string">"ok"</span></span>,</div><div class="line">"<span class="attribute">ticket</span>":<span class="value"><span class="string">"bxLdikRXVbTPdHSM05e5u5sUoXNKd8-41ZO3MhKoyN5OfkWITDGgnr2fwJ0m9E8NYzWKVZvdVtaUgWvsdshFKA"</span></span>,</div><div class="line">"<span class="attribute">expires_in</span>":<span class="value"><span class="number">7200</span></span></div><div class="line">}</div></pre></td></tr></table></figure>

<p>获得jsapi_ticket之后，就可以生成JSSDK权限验证的签名了。</p>
<h2 id="签名算法">签名算法</h2>
<p>签名生成规则如下：参与签名的字段包括noncestr（随机字符串）, 有效的jsapi_ticket, timestamp（时间戳）, url（当前网页的URL，不包含#及其后面部分） 。对所有待签名参数按照字段名的ASCII 码从小到大排序（字典序）后，使用URL键值对的格式（即key1=value1&amp;key2=value2…）拼接成字符串string1。这里需要注意的是所有参数名均为小写字符。对string1作sha1加密，字段名和字段值都采用原始值，不进行URL 转义。</p>
<p>即signature=sha1(string1)。 示例：</p>
<p>noncestr=Wm3WZYTPz0wzccnW<br>jsapi_ticket=sM4AOVdWfPE4DxkXGEs8VMCPGGVi4C3VM0P37wVUCFvkVAy_90u5h9nbSlYy3-Sl-HhTdfl2fzFy1AOcHKP7qg<br>timestamp=1414587457<br>url=<a href="http://mp.weixin.qq.com" target="_blank" rel="external">http://mp.weixin.qq.com</a></p>
<p>步骤1. 对所有待签名参数按照字段名的ASCII 码从小到大排序（字典序）后，使用URL键值对的格式（即key1=value1&amp;key2=value2…）拼接成字符串string1：</p>
<p>jsapi_ticket=sM4AOVdWfPE4DxkXGEs8VMCPGGVi4C3VM0P37wVUCFvkVAy_90u5h9nbSlYy3-Sl-HhTdfl2fzFy1AOcHKP7qg&amp;noncestr=Wm3WZYTPz0wzccnW&amp;timestamp=1414587457&amp;url=<a href="http://mp.weixin.qq.com" target="_blank" rel="external">http://mp.weixin.qq.com</a></p>
<p>步骤2. 对string1进行sha1签名，得到signature：</p>
<p>f4d90daf4b3bca3078ab155816175ba34c443a7b<br>注意事项</p>
<p>签名用的noncestr和timestamp必须与wx.config中的nonceStr和timestamp相同。<br>签名用的url必须是调用JS接口页面的完整URL。<br>出于安全考虑，开发者必须在服务器端实现签名的逻辑。</p>
<h1 id="附录2-所有JS接口列表">附录2-所有JS接口列表</h1>
<ul>
<li>onMenuShareTimeline</li>
<li>onMenuShareAppMessage</li>
<li>onMenuShareQQ</li>
<li>onMenuShareWeibo</li>
<li>startRecord</li>
<li>stopRecord</li>
<li>onVoiceRecordEnd</li>
<li>playVoice</li>
<li>pauseVoice</li>
<li>stopVoice</li>
<li>onVoicePlayEnd</li>
<li>uploadVoice</li>
<li>downloadVoice</li>
<li>chooseImage</li>
<li>previewImage</li>
<li>uploadImage</li>
<li>downloadImage</li>
<li>translateVoice</li>
<li>getNetworkType</li>
<li>openLocation</li>
<li>getLocation</li>
<li>hideOptionMenu</li>
<li>showOptionMenu</li>
<li>hideMenuItems</li>
<li>showMenuItems</li>
<li>hideAllNonBaseMenuItem</li>
<li>showAllNonBaseMenuItem</li>
<li>closeWindow</li>
<li>scanQRCode</li>
<li>chooseWXPay</li>
<li>getLatestAddress</li>
<li>editAddress</li>
<li>openProductSpecificView</li>
<li>addCard</li>
<li>chooseCard</li>
<li>openCard</li>
</ul>
<h1 id="附录3-所有按钮列表">附录3-所有按钮列表</h1>
<p>基本类</p>
<ul>
<li>举报: “menuItem:exposeArticle”</li>
<li>调整字体: “menuItem:setFont”</li>
<li>日间模式: “menuItem:dayMode”</li>
<li>夜间模式: “menuItem:nightMode”</li>
<li>刷新: “menuItem:refresh”</li>
<li>查看公众号（已添加）: “menuItem:profile”</li>
<li>查看公众号（未添加）: “menuItem:addContact”</li>
</ul>
<p>传播类</p>
<ul>
<li>发送给朋友: “menuItem:share:appMessage”</li>
<li>分享到朋友圈: “menuItem:share:timeline”</li>
<li>分享到QQ: “menuItem:share:qq”</li>
<li>分享到Weibo: “menuItem:share:weiboApp”</li>
<li>收藏: “menuItem:favorite”</li>
<li>分享到FB: “menuItem:share:facebook”</li>
</ul>
<p>保护类</p>
<ul>
<li>调试: “menuItem:jsDebug”</li>
<li>编辑标签: “menuItem:editTag”</li>
<li>删除: “menuItem:delete”</li>
<li>复制链接: “menuItem:copyUrl”</li>
<li>原网页: “menuItem:originPage”</li>
<li>阅读模式: “menuItem:readMode”</li>
<li>在QQ浏览器中打开: “menuItem:openWithQQBrowser”</li>
<li>在Safari中打开: “menuItem:openWithSafari”</li>
<li>邮件: “menuItem:share:email”</li>
<li>一些特殊公众号: “menuItem:share:brand” </li>
</ul>
<h1 id="附录4-位置与地址签名生成算法">附录4-位置与地址签名生成算法</h1>
<p>addrSign的生成规则与JSSDK权限验证的签名生成规则相同（参考附录1），只是参与签名参数有所不同。参与addrSign的签名参数有：appId、url（当前网页url）、timestamp、noncestr、accesstoken（用户授权凭证，请参照oauth2.0 协议获取）。</p>
<h1 id="附录5-支付扩展字段及签名生成算法">附录5-支付扩展字段及签名生成算法</h1>
<p>订单详情（package）扩展字符串定义<br>在商户调起JS API 时，商户需要此时确定该笔订单详情，并将该订单详情通过一定的方式进行组合放入package。JS API 调用后，微信将通过package 的内容生成预支付单。下 面将定义package 的所需字段列表以及签名方法。 接口需要注意：所有传入参数都是字符串类型！</p>
<h1 id="附录6-卡券扩展字段及签名生成算法">附录6-卡券扩展字段及签名生成算法</h1>
<h1 id="附录7-常见错误解决方法">附录7-常见错误解决方法</h1>
<h1 id="附录8-DEMO页面和示例代码">附录8-DEMO页面和示例代码</h1>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="基本说明">基本说明</h1>
<h2 id="使用说明">使用说明</h2>
<h3 id="1-引入JS文件">1.引入JS文件</h3>
<p>在需要调用JS接口的页面引入如下JS文件，（支持https）：<a href="http://res.wx.qq.]]>
    </summary>
    
      <category term="JSSDK" scheme="https://binsee.github.io/wechat-php-sdk/tags/JSSDK/"/>
    
      <category term="公众平台" scheme="https://binsee.github.io/wechat-php-sdk/categories/%E5%85%AC%E4%BC%97%E5%B9%B3%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[博客程序主题更新修复，找回了之前的留言数据]]></title>
    <link href="https://binsee.github.io/wechat-php-sdk/2014/201412310330/"/>
    <id>https://binsee.github.io/wechat-php-sdk/2014/201412310330/</id>
    <published>2014-12-30T19:30:36.000Z</published>
    <updated>2014-12-30T19:37:35.000Z</updated>
    <content type="html"><![CDATA[<p>之前使用这个hexo博客，几个文章经常更新，上传后文章url地址就变了，导致评论系统没有正确识别到页面，之前的评论也就显示不出来了。</p>
<p>后来更新博客主题，参考的主题代码中有问题，导致留言所有页面都能显示，这几天给处理了一下。</p>
<p>今天对博客主题又折腾了一下，差不多定型了，现在没有什么bug了。之前的留言信息也都从评论系统后台导进来了，之后可以正常使用了。</p>
<p>好了，收工，去睡觉了。</p>
<p>PS:最近微信官方没有更新公众号的开发文档，感觉是在憋大招，马上过年了，别太吓人，要不怕wechat-php-sdk跟随更新压力太大 =_=!! </p>
]]></content>
    <summary type="html">
    <![CDATA[<p>之前使用这个hexo博客，几个文章经常更新，上传后文章url地址就变了，导致评论系统没有正确识别到页面，之前的评论也就显示不出来了。</p>
<p>后来更新博客主题，参考的主题代码中有问题，导致留言所有页面都能显示，这几天给处理了一下。</p>
<p>今天对博客主题又折腾了]]>
    </summary>
    
      <category term="博客" scheme="https://binsee.github.io/wechat-php-sdk/categories/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[博客主题修改及功能改动]]></title>
    <link href="https://binsee.github.io/wechat-php-sdk/2014/201412300239/"/>
    <id>https://binsee.github.io/wechat-php-sdk/2014/201412300239/</id>
    <published>2014-12-29T18:39:26.000Z</published>
    <updated>2014-12-29T21:08:35.000Z</updated>
    <content type="html"><![CDATA[<p>研究了几个小时，把参考<a href="http://gengbiao.me" target="_blank" rel="external">coney主题</a>对博客主题进行修改。</p>
<p>并添加了七牛图床，以及其他一些改动。总体就是希望博客能更好用一点。</p>
<p>欢迎大家在此进行交流，互相学习。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>研究了几个小时，把参考<a href="http://gengbiao.me" target="_blank" rel="external">coney主题</a>对博客主题进行修改。</p>
<p>并添加了七牛图床，以及其他一些改动。总体就是希望博客能更好用一点。</p>]]>
    </summary>
    
      <category term="Hexo" scheme="https://binsee.github.io/wechat-php-sdk/tags/Hexo/"/>
    
      <category term="博客" scheme="https://binsee.github.io/wechat-php-sdk/categories/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[关于微信公众平台调整SSL安全策略的测试]]></title>
    <link href="https://binsee.github.io/wechat-php-sdk/2014/201411032325/"/>
    <id>https://binsee.github.io/wechat-php-sdk/2014/201411032325/</id>
    <published>2014-11-03T15:25:59.000Z</published>
    <updated>2014-12-29T19:37:03.000Z</updated>
    <content type="html"><![CDATA[<h2 id="引文：微信平台官方的公告">引文：微信平台官方的公告</h2>
<blockquote>
<div class="inner"><strong><a href="https://mp.weixin.qq.com/cgi-bin/announce?action=getannouncement&amp;key=1414562353&amp;version=6&amp;lang=zh_CN" target="_blank" rel="external">公众平台调整SSL安全策略，请开发者注意升级</a></strong><div id="content"><p><span style="font-family:微软雅黑, Microsoft YaHeifont-size:14pxfont-family:微软雅黑, Microsoft YaHei;font-size:14px">近一段时间HTTPS加密协议SSL曝出高危漏洞，可能导致网络中传输的数据被黑客监听，对用户信息、网络账号密码等安全构成威胁。为保证用户信息以及通信安全，微信公众平台将关闭掉SSLv2、SSLv3版本支持，不再支持部分使用SSLv2、 SSLv3或更低版本的客户端调用。<span style="color: rgb(0, 0, 0);"><strong>请仍在使用这些版本的开发者于11月30日前尽快修复升级。</strong></span></span></p><div><span style="font-family:微软雅黑, Microsoft YaHeifont-size:14pxfont-family:微软雅黑, Microsoft YaHei;font-size:14px">注意：通过微信开放平台（open.weixin.qq.com）进行移动应用和网页应用开发的开发者也同样需要修复升级。<br>建议开发者使用如下方法进行修复：<br>OpenSSL（<a href="http://www.openssl.org）可使用SSL_CTX" target="_blank" rel="external">http://www.openssl.org）可使用SSL_CTX</a> <em>SSL_CTX_new(const SSL_METHOD </em>method)函数设置SSL客户端请求方法，使用TLSv1_client_method或更高版本。<br><br>示例1（php）:<br>curl_setopt($curl, CURLOPT_SSLVERSION, CURL_SSLVERSION_TLSv1);<br><br>示例2（C#）:<br>System.Net.ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls | SecurityProtocolType.Tls11 | SecurityProtocolType.Tls12</span><iframe id="tmp_downloadhelper_iframe" style="display: none;"></iframe></div></div><p class="sign">微信团队<br><span id="online_time">2014年10月29日</span></p></div>


</blockquote>
<hr>
<h2 id="缘起">缘起</h2>
<p>就这个安全策略的更改，让一堆人都比较茫然。<br>在<strong><a href="https://github.com/dodgepudding/wechat-php-sdk" target="_blank" rel="external">wechat-php-sdk</a></strong>类库的部分使用者和开发者们，也进行了讨论：<br>部分链接：<strong><a href="https://github.com/dodgepudding/wechat-php-sdk/pull/149" target="_blank" rel="external">pull#149</a> 、 <a href="https://github.com/dodgepudding/wechat-php-sdk/pull/145" target="_blank" rel="external">pull#145</a> 、 <a href="https://github.com/dodgepudding/wechat-php-sdk/issues/150" target="_blank" rel="external">issues#150</a></strong></p>
<p>虽然查阅很多文件，最终认为应该为CURLOPT_SSLVERSION参数使用数值1，但毕竟微信官方的接口到11月30日后才会进行更改，才能得出结论。而查阅到的文件中都没有明确说TLS方式的值是1，心里总有些没底。因此今天查了查资料，自己做个模拟试验，来证明是否可用。</p>
<p>我的本地服务器端软件是phpStudy 2014版，集成的组件很多，我主要用Apache，而php有5.2-5.6共计5个版本。</p>
<p>思路：<br>1、使用Apache搭建https服务器<br>2、限制https服务器不允许使用SSLv2、SSLv3。也就是说只能用TLS方式了<br>这里就不说配置https的过程了，相关教程一堆。这里把最关键的关闭SSLv2、v3的内容说一下：<br>Apache的：<br>在httpd-ssl.conf文件中替换这两个设置：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="constant">SSLProtocol</span> all -<span class="constant">SSLv3</span> -<span class="constant">SSLv2</span> </div><div class="line"><span class="constant">SSLCipherSuite</span>  <span class="constant">ECDHE</span>-<span class="constant">RSA</span>-<span class="constant">AES128</span>-<span class="constant">GCM</span>-<span class="constant">SHA256</span><span class="symbol">:ECDHE-RSA-AES128-SHA</span><span class="symbol">:ECDHE-RSA-RC4-SHA</span><span class="symbol">:AES128-GCM-SHA256</span><span class="symbol">:AES128-SHA256</span><span class="symbol">:AES128-SHA</span><span class="symbol">:ECDHE-RSA-AES256-GCM-SHA384</span><span class="symbol">:ECDHE-RSA-AES256-SHA384</span><span class="symbol">:ECDHE-RSA-AES256-SHA</span><span class="symbol">:AES256-GCM-SHA384</span><span class="symbol">:AES256-SHA256</span><span class="symbol">:AES256-SHA</span><span class="symbol">:ECDHE-RSA-AES128-SHA256</span><span class="symbol">:RC4-SHA</span><span class="symbol">:</span>!<span class="symbol">aNULL:</span>!<span class="symbol">eNULL:</span>!<span class="constant">EXPORT</span><span class="symbol">:</span>!<span class="constant">DES</span><span class="symbol">:</span>!<span class="number">3</span><span class="constant">DES:</span>!<span class="constant">MD5</span><span class="symbol">:</span>!<span class="constant">DSS</span><span class="symbol">:</span>!<span class="constant">PKS</span></div></pre></td></tr></table></figure>

<p>这样就无法使用SSLv2、v3的方式连接https了，只能用TLS。<br>其他环境的请看文章最后的参考<a href="#查阅的文件">文章链接部分</a>。</p>
<p>使用的测试代码：<br>我将https的443端口指向的目录里有个1.php文件，内容很简单：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">&lt;?php</span></div><div class="line"><span class="keyword">echo</span> <span class="string">"yes!"</span>;</div><div class="line"><span class="preprocessor">?&gt;</span></div></pre></td></tr></table></figure>

<p>然后是普通的http访问的页面<a href="http://127.0.0.1/99.php，代码如下：" target="_blank" rel="external">http://127.0.0.1/99.php，代码如下：</a></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="preprocessor">&lt;?php</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">http_get</span><span class="params">(<span class="variable">$url</span>)</span></span>{</div><div class="line">    <span class="variable">$oCurl</span> = curl_init();</div><div class="line">    <span class="keyword">if</span>(stripos(<span class="variable">$url</span>,<span class="string">"https://"</span>)!==<span class="keyword">FALSE</span>){</div><div class="line">        curl_setopt(<span class="variable">$oCurl</span>, CURLOPT_SSL_VERIFYPEER, <span class="keyword">FALSE</span>);</div><div class="line">        curl_setopt(<span class="variable">$oCurl</span>, CURLOPT_SSL_VERIFYHOST, <span class="keyword">FALSE</span>);</div><div class="line">        curl_setopt(<span class="variable">$oCurl</span>, CURLOPT_SSLVERSION,<span class="number">1</span>); <span class="comment">//CURL_SSLVERSION_TLSv1</span></div><div class="line">    }</div><div class="line">    curl_setopt(<span class="variable">$oCurl</span>, CURLOPT_URL, <span class="variable">$url</span>);</div><div class="line">    curl_setopt(<span class="variable">$oCurl</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span> );</div><div class="line">    <span class="variable">$sContent</span> = curl_exec(<span class="variable">$oCurl</span>);</div><div class="line">    <span class="variable">$aStatus</span> = curl_getinfo(<span class="variable">$oCurl</span>);</div><div class="line">    curl_close(<span class="variable">$oCurl</span>);</div><div class="line">    <span class="keyword">if</span>(intval(<span class="variable">$aStatus</span>[<span class="string">"http_code"</span>])==<span class="number">200</span>){</div><div class="line">        <span class="keyword">return</span> <span class="variable">$sContent</span>;</div><div class="line">    }<span class="keyword">else</span>{</div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    }</div><div class="line">}</div><div class="line"><span class="variable">$r</span>=http_get(<span class="string">"https://127.0.0.1/1.php"</span>);</div><div class="line">var_dump(<span class="variable">$r</span>);</div><div class="line"><span class="keyword">exit</span>;</div><div class="line"><span class="preprocessor">?&gt;</span></div></pre></td></tr></table></figure>

<p>访问http页面：<a href="http://127.0.0.1/99.php" target="_blank" rel="external">http://127.0.0.1/99.php</a><br>显示的结果是：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">string</span>(<span class="number">4</span>) <span class="string">"yes!"</span></div></pre></td></tr></table></figure>

<p>测试其他访问方式，修改99.php中 第7行的数值，进行测试。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="title">CURLOPT_SSLVERSION</span> 参数可选值的定义如下：</div><div class="line">CURL_SSLVERSION_DEFAULT (<span class="number">0</span>)</div><div class="line">CURL_SSLVERSION_TLSv1 (<span class="number">1</span>)</div><div class="line">CURL_SSLVERSION_SSLv2 (<span class="number">2</span>)</div><div class="line">CURL_SSLVERSION_SSLv3 (<span class="number">3</span>)</div><div class="line">CURL_SSLVERSION_TLSv1_0 (<span class="number">4</span>)</div><div class="line">CURL_SSLVERSION_TLSv1_1 (<span class="number">5</span>)</div><div class="line">CURL_SSLVERSION_TLSv1_2 (<span class="number">6</span>)</div><div class="line">其中，后三种方式，在curl <span class="number">7</span>.<span class="number">34</span>版以后才支持。</div></pre></td></tr></table></figure>

<p>你可以发现，只要数值为2或3，都无法访问。而是用其他数值，根据php版本和curl版本不同，是否可以访问的结果也不同。</p>
<hr>
<h2 id="测试结果：">测试结果：</h2>
<p>经过测试（本地搭建https服务器，限制只能用tls验证），HTTPS修改为tls验证方式后，通过设置参数<br>curl_setopt($oCurl, CURLOPT_SSLVERSION, 1);<br>可以访问（不加也可以，会自动尝试TLS/SSL方式，但最好是加上）。</p>
<p>测试结果如下：<br>php版本5.2、5.3，curl版本为：7.21.0  只能用值1，即TLSv1<br>php版本5.4、5.5，curl版本：7.36.0  OpenSSL版本：0.9.8y/1.0.1f  可用值1或4，即TLSv1/v1.0<br>php版本5.6，curl版本：7.36.0  OpenSSL版本：1.0.1g  可用值1或4，即TLSv1/v1.0</p>
<p>或许是我服务器https配置问题，只能使用TLSv1.0访问，使用TLS的V1.1、V1.2版本会访问失败（即常量5、6）。</p>
<p>由此测试得出结论，国内无论用哪家的php空间，php版本至少达到5.2，curl版本为7.21及以上，使用常量值1即可（再低的我这没版本可以测试）。</p>
<hr>
<h2 id="查阅的文件">查阅的文件</h2>
<p>CURLOPT_SSLVERSION选项参考：<a href="http://php.net/manual/en/function.curl-setopt.php" target="_blank" rel="external">http://php.net/manual/en/function.curl-setopt.php</a><br>apache下配置https的文档：<a href="http://flyli815.iteye.com/blog/1837204" target="_blank" rel="external">http://flyli815.iteye.com/blog/1837204</a><br><a href="http://csq-3.blog.163.com/blog/static/38738439200911741031190/" target="_blank" rel="external">http://csq-3.blog.163.com/blog/static/38738439200911741031190/</a><br>关闭apache下https的SSLv2、SSLv3访问设置：<a href="http://www.myhack58.com/Article/html/3/62/2014/54804_5.htm" target="_blank" rel="external">http://www.myhack58.com/Article/html/3/62/2014/54804_5.htm</a><br>其他：<a href="https://wiki.mozilla.org/Security/Server_Side_TLS" target="_blank" rel="external">https://wiki.mozilla.org/Security/Server_Side_TLS</a></p>
]]></content>
    <summary type="html">
    <![CDATA[公众平台调整SSL安全策略后，PHP访问方式的验证]]>
    
    </summary>
    
      <category term="公众平台" scheme="https://binsee.github.io/wechat-php-sdk/categories/%E5%85%AC%E4%BC%97%E5%B9%B3%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[公众平台加密方案,订阅号无法回复问题解决方案]]></title>
    <link href="https://binsee.github.io/wechat-php-sdk/2014/2014101601/"/>
    <id>https://binsee.github.io/wechat-php-sdk/2014/2014101601/</id>
    <published>2014-10-16T15:45:08.000Z</published>
    <updated>2014-12-29T19:36:54.000Z</updated>
    <content type="html"><![CDATA[<h1 id="关于公众平台加密方案的，存在一个问题，请订阅号注意：">关于公众平台加密方案的，存在一个问题，请订阅号注意：</h1>
<p><strong>由于未认证的订阅号没有appid，所以在解密时，由于没有传入appid，会导致解密时appid效验失败，且回复时对信息的加密到微信服务器时会验证失败，从而用户收不到回信。</strong></p>
<h1 id="解决方法：">解决方法：</h1>
<h2 id="步骤1、官方的Prpcrypt类库decrypt()函数">步骤1、官方的Prpcrypt类库decrypt()函数</h2>
<p>搜索 <code>$from_appid = substr($content, $xml_len + 4);</code>，按如下修改</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">    <span class="variable">$from_appid</span> = substr(<span class="variable">$content</span>, <span class="variable">$xml_len</span> + <span class="number">4</span>);</div><div class="line">    <span class="keyword">if</span> (!<span class="variable">$appid</span>)</div><div class="line">        <span class="variable">$appid</span> = <span class="variable">$from_appid</span>;</div><div class="line">    <span class="comment">//如果传入的appid是空的，则认为是订阅号，使用数据中提取出来的appid</span></div><div class="line">} <span class="keyword">catch</span> (<span class="keyword">Exception</span> <span class="variable">$e</span>) {</div></pre></td></tr></table></figure>

<p>然后下边搜索<code>return array(0, $xml_content)</code>按如下修改</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (<span class="variable">$from_appid</span> != <span class="variable">$appid</span>)</div><div class="line">    <span class="keyword">return</span> <span class="keyword">array</span>(ErrorCode::<span class="variable">$ValidateAppidError</span>, <span class="keyword">null</span>);</div><div class="line"><span class="comment">//不注释上边两行，避免传入appid是错误的情况</span></div><div class="line"><span class="keyword">return</span> <span class="keyword">array</span>(<span class="number">0</span>, <span class="variable">$xml_content</span>, <span class="variable">$from_appid</span>); </div><div class="line"><span class="comment">//增加appid，为了解决后面加密回复消息的时候没有appid的订阅号会无法回复</span></div></pre></td></tr></table></figure>

<p>注意<code>return array(0, $xml_content)</code>替换为</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">return</span> <span class="keyword">array</span>(<span class="number">0</span>, <span class="variable">$xml_content</span>, <span class="variable">$from_appid</span>);</div></pre></td></tr></table></figure>

<h2 id="步骤2、">步骤2、</h2>
<p>在调用 <code>decrypt($encryptStr,&#39;&#39;)</code>方法进行加密时会返回一个数组，如：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$pc</span> = <span class="keyword">new</span> Prpcrypt(<span class="variable">$this</span><span class="variable">-&gt;encodingAesKey</span>);</div><div class="line"><span class="variable">$array</span> = <span class="variable">$pc</span><span class="variable">-&gt;decrypt</span>(<span class="variable">$encryptStr</span>,<span class="variable">$this</span><span class="variable">-&gt;appid</span>);</div><div class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$array</span>[<span class="number">0</span>]) || (<span class="variable">$array</span>[<span class="number">0</span>] != <span class="number">0</span>)) {</div><div class="line">    <span class="keyword">if</span> (!<span class="variable">$return</span>) {</div><div class="line">        <span class="keyword">die</span>(<span class="string">'解密失败！'</span>);</div><div class="line">    } <span class="keyword">else</span> {</div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    }</div><div class="line">}</div><div class="line"><span class="variable">$this</span><span class="variable">-&gt;postxml</span> = <span class="variable">$array</span>[<span class="number">1</span>]; <span class="comment">//解密出的数据</span></div><div class="line"><span class="keyword">if</span> (!<span class="variable">$this</span><span class="variable">-&gt;appid</span>)  <span class="comment">//验证自己原先的appid是否为空</span></div><div class="line">    <span class="variable">$this</span><span class="variable">-&gt;appid</span> = <span class="variable">$array</span>[<span class="number">2</span>];<span class="comment">//为了没有appid的订阅号。</span></div></pre></td></tr></table></figure>

<p>这里$array[2] 为你的appid<br>保存这个appid，在回复信息进行加密时，传入这个appid进行加密即可。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$pc</span> = <span class="keyword">new</span> Prpcrypt(<span class="variable">$this</span><span class="variable">-&gt;encodingAesKey</span>);</div><div class="line">		    <span class="variable">$array</span> = <span class="variable">$pc</span><span class="variable">-&gt;encrypt</span>(<span class="variable">$xmldata</span>, <span class="variable">$this</span><span class="variable">-&gt;appid</span>);</div></pre></td></tr></table></figure>

<p>此问题发现和提出解决方案来自开源项目<strong><a href="https://github.com/dodgepudding/wechat-php-sdk" target="_blank" rel="external">wechat-php-sdk</a></strong>的<strong><a href="https://github.com/dodgepudding/wechat-php-sdk/pull/140" target="_blank" rel="external">pull#140</a></strong><br>本人在其基础上再次修改方案，见<strong><a href="https://github.com/dodgepudding/wechat-php-sdk/pull/141" target="_blank" rel="external">pull#141</a></strong></p>
]]></content>
    <summary type="html">
    <![CDATA[2014/10/16 公众号开始支持消息体加密]]>
    
    </summary>
    
      <category term="公众平台" scheme="https://binsee.github.io/wechat-php-sdk/categories/%E5%85%AC%E4%BC%97%E5%B9%B3%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[公众号开始支持消息体加密，开源类库已更新]]></title>
    <link href="https://binsee.github.io/wechat-php-sdk/2014/2014101401/"/>
    <id>https://binsee.github.io/wechat-php-sdk/2014/2014101401/</id>
    <published>2014-10-14T09:00:47.000Z</published>
    <updated>2015-01-02T15:15:59.000Z</updated>
    <content type="html"><![CDATA[<p><strong>今天，公众号平台开始支持消息体加密。<br>已经在第一时间，更新了开源类库<a href="https://github.com/binsee/wechat-php-sdk" target="_blank" rel="external">wechat-php-sdk</a>，增加了对公众号的加密方案的支持。</strong></p>
<hr>
<p>下面简单做个笔记：<br>经过对比，使用方案和企业号的加密方案基本一样，可以说是直接拿来用的。但也有区别的地方：</p>
<h2 id="加密模式：">加密模式：</h2>
<p>企业号：强制加密方式<br>公众号：3种模式（明文模式、兼容模式、安全模式）<br><a id="more"></a><br>公众平台提供了3种加解密的模式供开发者选择，即明文模式、兼容模式、安全模式(可在“开发者中心”选择相应模式),选择兼容模式和安全模式前，需在开发者中心填写消息加解密密钥EncodingAESKey。<br>明文模式：维持现有模式，没有适配加解密新特性，消息体明文收发，默认设置为明文模式<br>兼容模式：公众平台发送消息内容将同时包括明文和密文，消息包长度增加到原来的3倍左右；公众号回复明文或密文均可，不影响现有消息收发；开发者可在此模式下进行调试<br>安全模式（推荐）：公众平台发送消息体的内容只含有密文，公众账号回复的消息体也为密文，建议开发者在调试成功后使用此模式收发消息</p>
<h2 id="加密使用范围:">加密使用范围:</h2>
<p>企业号: 接口验证、接口回调、回复接口回调<br>公众号：接口回调、回复接口回调</p>
<h2 id="参数设置：">参数设置：</h2>
<p>EncodingAESKey 在平台上进行随机生成</p>
<h2 id="其他：">其他：</h2>
<p>这里得吐槽一下，公众平台上传的初版加密方案例程中，php版用的还是企业号平台有问题那版的例程。</p>
<p>小问题在：<br>示例代码\php\pkcs7Encoder.php 第93行，需要把那个print注释掉<br>否则会在加密函数返回前输出一次加密后的字符串，导致无法解析，客户无法收到回复</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><strong>今天，公众号平台开始支持消息体加密。<br>已经在第一时间，更新了开源类库<a href="https://github.com/binsee/wechat-php-sdk" target="_blank" rel="external">wechat-php-sdk</a>，增加了对公众号的加密方案的支持。</strong></p>
<hr>
<p>下面简单做个笔记：<br>经过对比，使用方案和企业号的加密方案基本一样，可以说是直接拿来用的。但也有区别的地方：</p>
<h2 id="加密模式：">加密模式：</h2>
<p>企业号：强制加密方式<br>公众号：3种模式（明文模式、兼容模式、安全模式）<br>]]>
    
    </summary>
    
      <category term="公众平台" scheme="https://binsee.github.io/wechat-php-sdk/categories/%E5%85%AC%E4%BC%97%E5%B9%B3%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[wiki文档说明]]></title>
    <link href="https://binsee.github.io/wechat-php-sdk/2014/aboutwiki/"/>
    <id>https://binsee.github.io/wechat-php-sdk/2014/aboutwiki/</id>
    <published>2014-09-22T08:04:29.000Z</published>
    <updated>2014-12-29T19:36:19.000Z</updated>
    <content type="html"><![CDATA[<h1 id="wechat-php-sdk项目wiki使用说明"><a href="https://github.com/binsee/wechat-php-sdk/tree/master/wiki" title="wechat-php-sdk项目上的wiki目录" target="_blank" rel="external">wechat-php-sdk项目wiki</a>使用说明</h1>
<hr>
<p><strong><a href="https://github.com/binsee/wechat-php-sdk" title="wechat-php-sdk项目" target="_blank" rel="external">wechat-php-sdk项目</a></strong>的wiki文档<br>Make By：binsee</p>
<hr>
<h1 id="说明">说明</h1>
<p>项目名称：<strong><a href="https://github.com/binsee/wechat-php-sdk" target="_blank" rel="external">wechat-php-sdk</a></strong><br>项目wiki：<strong><a href="https://github.com/binsee/wechat-php-sdk/wiki" target="_blank" rel="external">https://github.com/binsee/wechat-php-sdk/wiki</a></strong></p>
<blockquote>
<p><strong>wiki文档可以让你更好的了解 wechat-php-sdk 项目，更好的使用。 </strong><br><strong>欢迎对wiki文档内容进行补充，把 wechat-php-sdk 项目变得更清晰易懂。</strong></p>
</blockquote>
<h1 id="为你的wechat-php-sdk生成wiki">为你的wechat-php-sdk生成<a href="https://github.com/binsee/wechat-php-sdk/wiki" target="_blank" rel="external">wiki</a></h1>
<p><strong>如果你在github上fork了<code>wechat-php-sdk</code>项目，而且想为项目生成wiki，可以用这里的文件来生成。</strong></p>
<h2 id="使用步骤">使用步骤</h2>
<ul>
<li><p>在你的github上，fork或者创建<code>wechat-php-sdk</code>项目</p>
</li>
<li><p>激活项目wiki，已激活的请跳过</p>
</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">进入项目的设置页面：</div><div class="line">http<span class="variable">s:</span>//github.<span class="keyword">com</span>/你的用户名/wechat-php-sdk/settings</div><div class="line">找到Features一栏，把 Wikis 选项打钩，就可以激活你项目的wiki了</div></pre></td></tr></table></figure>

<ul>
<li><p>进入项目的wiki页面：<br><code>https://github.com/你的用户名/wechat-php-sdk/wiki</code></p>
</li>
<li><p>点绿色的 <code>Create the first page</code> 按钮</p>
</li>
<li><p>直接到下方点 <code>Save Page</code> 按钮</p>
</li>
<li><p>在右边找到 <code>Clone this wiki locally</code> 一栏，复制git地址：<br><code>git@github.com:你的用户名/wechat-php-sdk.wiki.git</code></p>
</li>
<li><p>在项目的上一层目录执行<br><code>git clone git@github.com:你的用户名/wechat-php-sdk.wiki.git</code></p>
</li>
<li><p>进入新出现的 <code>wechat-php-sdk.wiki</code> 目录，把wiki目录下的文件都复制过来</p>
</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="special">#</span>这里有个高级用法，就是使用连接方式把wiki目录链接过来，而不是复制</div><div class="line">windows下的用法:  </div><div class="line">如项目目录为：E:<span class="command">\wechat</span>-php-sdk<span class="command">\</span></div><div class="line">项目wiki目录为：E:<span class="command">\wechat</span>-php-sdk.wiki<span class="command">\</span></div><div class="line">执行命令：</div><div class="line">        mklink /j E:<span class="command">\wechat</span>-php-sdk.wiki<span class="command">\wiki</span> E:<span class="command">\wechat</span>-php-sdk<span class="command">\wiki</span></div><div class="line">这样的话，两个目录就会被联接到一起。</div><div class="line">以后进行更改wiki在哪个目录都行，另一个目录都是同步的。</div><div class="line">分别在 项目目录 和 项目wiki目录 进行git提交就可以了。</div></pre></td></tr></table></figure>

<ul>
<li><p>然后直接缓存上传即可。</p>
</li>
<li><p>现在去你github上项目的wiki目录里看一下吧</p>
</li>
</ul>
<h1 id="生成page">生成page</h1>
<p><strong>你也可以将wiki文档，生成为个人站点，会更加直观。</strong></p>
<p><strong>比如使用 Hexo 或者其他的框架之类。</strong></p>
<p><strong>这块的话，请自行搜索相关资料。</strong>  </p>
<p><strong>现在你所看到wiki Blog就是使用Hexo框架生成的.</strong></p>
]]></content>
    <summary type="html">
    <![CDATA[wechat-php-sdk项目的wiki文档说明]]>
    
    </summary>
    
      <category term="wiki" scheme="https://binsee.github.io/wechat-php-sdk/tags/wiki/"/>
    
      <category term="wechat-php-sdk" scheme="https://binsee.github.io/wechat-php-sdk/categories/wechat-php-sdk/"/>
    
  </entry>
  
</feed>
